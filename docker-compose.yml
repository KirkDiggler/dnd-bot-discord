version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: dnd-bot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - dnd-bot-network

  bot:
    build: .
    container_name: dnd-bot
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DND5E_BASE_URL=${DND5E_BASE_URL:-https://www.dnd5eapi.co}
      - REDIS_URL=redis://redis:6379
    restart: unless-stopped
    networks:
      - dnd-bot-network
    profiles:
      - production

  # Optional: Redis Commander for debugging
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: dnd-bot-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - dnd-bot-network
    profiles:
      - debug

volumes:
  redis-data:

networks:
  dnd-bot-network:
    driver: bridge